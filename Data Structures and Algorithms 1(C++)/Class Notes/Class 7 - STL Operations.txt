//More on STL
#include <iostream>
#include <vector>
#include <list>
#include <map>
#include <stack>
#include <queue>
#include <string>

using namespace std;

class course {
public:
	string name;
	int section;
	int credits;
	course(string n, int s, int c) { name = n; section = s; credits = c; }
	course(){}
	bool operator==(course c) { return name == c.name; }

};

class student {
public:
	int ID;

	list<course> * p_courses;
	student(int i) { ID = i; p_courses = new list<course>;
	}
	student() { ID = 0;  p_courses = new list<course>; }
	bool operator==(student s) { return ID == s.ID; }
};

int main() {
	vector<student> DB;
	student s1(234);
	course c1("CSE283", 1, 3);
	vector<student>::iterator it1;
	//add student
	it1 = find(DB.begin(), DB.end(), s1);
	if (it1 == DB.end())  DB.push_back(s1);
	//add course
	list<course>::iterator it2 = find(it1->p_courses->begin(), it1->p_courses->end(), c1);
	if (it2 == it1->p_courses->end()) {
		it1->p_courses->push_front(c1);
	}
	//delete course
	it2 = find(it1->p_courses->begin(), it1->p_courses->end(), c1);
	if (it2 != it1->p_courses->end()) { it1->p_courses->erase(it2); }

	//delete student
	it1 = find(DB.begin(), DB.end(), s1);
	if (it1 != DB.end()) { DB.erase(it1); }



}
